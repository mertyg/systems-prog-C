#include <stdio.h>
#include <string.h>
#include <stdlib.h>

struct Pair{
  char uid[31];
  int count;
};
int main(int argc, char **argv){
  if (argc>2){
    printf("USAGE: most_processes [ppid]\n");
    return 1;
  }
	
    int count=0, found=0,ppid,size=100,max_count=0;
    char str[1024],str_prev[1024];
    str[0]='t';
    str_prev[0]='b';
    char uid[31],max_uid[31];
    struct Pair* pairs;
    pairs = (struct Pair  *) malloc(size);
    int argv1;
    if(argc==2){
      sscanf (argv[1],"%d",&argv1);
      //printf("%d",argv1);
    }
    while (1){
      strcpy(str_prev,str);
      fgets(str,1024,stdin);
      if(strcmp(str_prev,str)==0){
	break;
      }
      
      sscanf(str,"%s %*d  %d %*s",uid,&ppid);
      if(argc==2 && ppid!=argv1){
	continue;
	}

      // printf("%s %d\n",uid,ppid);
      found=0;
      
      for(int i=0;i<count;i++){
	//printf("%d %s bitis\n",max_count,max_uid);
	if(strcmp(pairs[i].uid,uid)==0){
	  printf("%d",uid);
	  //printf("%d\n",pairs[i].count);
	  pairs[i].count++;
	  found=1;
	  if(pairs[i].count>max_count){
	    max_count = pairs[i].count;
	    strcpy(max_uid,pairs[i].uid);
	  }
		break;
	}}
	if(found==0){
	  if(count==size){
	    //correct this
	    struct Pair* newpairs = (struct Pair*) realloc(pairs, 2*size);
	    pairs = newpairs;
	  }
	  pairs[count].count=1;
	  strcpy(pairs[count].uid,uid);
	  count++;
	  if(max_count==0){
	    max_count = pairs[count-1].count;
	    strcpy(max_uid,pairs[count-1].uid);
	  }

	}
    }
    //printf("last line: %s\n",str);
    printf("%s %d\n",max_uid,max_count);
    
  return 0;
}
